import{_ as c,e as r,k as v,o as d,c as f,a as _}from"./index-5f165e8f.js";const p={setup(){const e=r(null);let n,s=r(!1);v(()=>{n=e.value.getContext("2d"),console.log(e),e.value.addEventListener("mousedown",u),e.value.addEventListener("mouseup",i),e.value.addEventListener("mouseleave",i),e.value.addEventListener("mousemove",l)});function a(t){const o=e.value.getBoundingClientRect();if(console.log(t.clientX),console.log(o.left),t.type==="mousemove")return{x:t.clientX-o.left,y:t.clientY-o.top}}function u(t){t.preventDefault(),s.value=!0}function i(){s.value=!1,n.beginPath()}function l(t){if(!s.value)return;const o=a(t);console.log(o),n.lineTo(o.x,o.y),n.stroke()}return{canvas:e,ctx:n,draw:l}}},g={class:"drawArea"};function m(e,n,s,a,u,i){return d(),f("div",g,[_("canvas",{ref:"canvas",onMousedown:n[0]||(n[0]=l=>a.draw(e.e))},null,544)])}const P=c(p,[["render",m]]);export{P as C};
